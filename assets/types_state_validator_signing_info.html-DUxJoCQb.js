import{_ as e,o as i,c as a,e as n}from"./app-CiOG3kca.js";const s={},d=n(`<h1 id="validatorsigninginfo" tabindex="-1"><a class="header-anchor" href="#validatorsigninginfo"><span>ValidatorSigningInfo</span></a></h1><h2 id="valid-validator-signing-info" tabindex="-1"><a class="header-anchor" href="#valid-validator-signing-info"><span>valid validator signing info</span></a></h2><p><em>Given</em> validator signing info</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
  &quot;address&quot;: &quot;chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38&quot;,
  &quot;missedBlocksCount&quot;: 10
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>When</em> validate validator signing info</p><p><em>Then</em> expect no error.</p><h2 id="valid-validator-signing-info-with-zero-value" tabindex="-1"><a class="header-anchor" href="#valid-validator-signing-info-with-zero-value"><span>valid validator signing info with zero value</span></a></h2><p><em>Given</em> validator signing info</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
  &quot;address&quot;: &quot;chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>When</em> validate validator signing info</p><p><em>Then</em> expect no error.</p><h2 id="an-error-is-returned-if-address-is-empty" tabindex="-1"><a class="header-anchor" href="#an-error-is-returned-if-address-is-empty"><span>an error is returned if address is empty</span></a></h2><p><em>Given</em> validator signing info</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>When</em> validate validator signing info</p><p><em>Then</em> expect the error</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>address: empty address string is not allowed: parse error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="an-error-is-returned-if-address-is-not-a-bech32-address" tabindex="-1"><a class="header-anchor" href="#an-error-is-returned-if-address-is-not-a-bech32-address"><span>an error is returned if address is not a bech32 address</span></a></h2><p><em>Given</em> validator signing info</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
  &quot;address&quot;: &quot;foo&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>When</em> validate validator signing info</p><p><em>Then</em> expect the error</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>address: decoding bech32 failed: invalid bech32 string length 3: parse error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,23),t=[d];function r(l,o){return i(),a("div",null,t)}const c=e(s,[["render",r],["__file","types_state_validator_signing_info.html.vue"]]),g=JSON.parse('{"path":"/specs/mods/validator/types_state_validator_signing_info.html","title":"ValidatorSigningInfo","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"valid validator signing info","slug":"valid-validator-signing-info","link":"#valid-validator-signing-info","children":[]},{"level":2,"title":"valid validator signing info with zero value","slug":"valid-validator-signing-info-with-zero-value","link":"#valid-validator-signing-info-with-zero-value","children":[]},{"level":2,"title":"an error is returned if address is empty","slug":"an-error-is-returned-if-address-is-empty","link":"#an-error-is-returned-if-address-is-empty","children":[]},{"level":2,"title":"an error is returned if address is not a bech32 address","slug":"an-error-is-returned-if-address-is-not-a-bech32-address","link":"#an-error-is-returned-if-address-is-not-a-bech32-address","children":[]}],"git":{},"filePathRelative":"specs/mods/validator/types_state_validator_signing_info.md"}');export{c as comp,g as data};
