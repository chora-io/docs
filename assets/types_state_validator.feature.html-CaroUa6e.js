import{_ as a,o as t,c as r,a as e}from"./app-CiOG3kca.js";const s={},d=e("p",null,"Feature: Validator",-1),o=e("p",null,'Scenario: valid validator Given validator """ { "address": "chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38", "metadata": "chora:13toVfvC2YxrrfSXWB5h2BGHiXZURsKxWUz72uDRDSPMCrYPguGUXSC.rdf" } """ When validate validator Then expect no error',-1),i=e("p",null,'Scenario: an error is returned if address is empty Given validator """ {} """ When validate validator Then expect the error """ address: empty address string is not allowed: parse error """',-1),n=e("p",null,'Scenario: an error is returned if address is not a bech32 address Given validator """ { "address": "foo" } """ When validate validator Then expect the error """ address: decoding bech32 failed: invalid bech32 string length 3: parse error """',-1),l=e("p",null,'Scenario: an error is returned if metadata is empty Given validator """ { "address": "chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38" } """ When validate validator Then expect the error """ metadata: empty string is not allowed: parse error """',-1),c=e("p",null,'Scenario: an error is returned if metadata exceeds 128 characters Given validator """ { "address": "chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38" } """ And metadata with length "129" When validate validator Then expect the error """ metadata: exceeds max length 128: parse error """',-1),h=[d,o,i,n,l,c];function _(v,p){return t(),r("div",null,h)}const f=a(s,[["render",_],["__file","types_state_validator.feature.html.vue"]]),u=JSON.parse('{"path":"/specs/mods/validator/types_state_validator.feature","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{},"filePathRelative":"specs/mods/validator/types_state_validator.feature"}');export{f as comp,u as data};
