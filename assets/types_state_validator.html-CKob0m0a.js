import{_ as e,o as a,c as t,e as r}from"./app-CiOG3kca.js";const d={},i=r(`<h1 id="validator" tabindex="-1"><a class="header-anchor" href="#validator"><span>Validator</span></a></h1><h2 id="valid-validator" tabindex="-1"><a class="header-anchor" href="#valid-validator"><span>valid validator</span></a></h2><p><em>Given</em> validator</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
  &quot;address&quot;: &quot;chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38&quot;,
  &quot;metadata&quot;: &quot;chora:13toVfvC2YxrrfSXWB5h2BGHiXZURsKxWUz72uDRDSPMCrYPguGUXSC.rdf&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>When</em> validate validator</p><p><em>Then</em> expect no error.</p><h2 id="an-error-is-returned-if-address-is-empty" tabindex="-1"><a class="header-anchor" href="#an-error-is-returned-if-address-is-empty"><span>an error is returned if address is empty</span></a></h2><p><em>Given</em> validator</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>When</em> validate validator</p><p><em>Then</em> expect the error</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>address: empty address string is not allowed: parse error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="an-error-is-returned-if-address-is-not-a-bech32-address" tabindex="-1"><a class="header-anchor" href="#an-error-is-returned-if-address-is-not-a-bech32-address"><span>an error is returned if address is not a bech32 address</span></a></h2><p><em>Given</em> validator</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
  &quot;address&quot;: &quot;foo&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>When</em> validate validator</p><p><em>Then</em> expect the error</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>address: decoding bech32 failed: invalid bech32 string length 3: parse error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="an-error-is-returned-if-metadata-is-empty" tabindex="-1"><a class="header-anchor" href="#an-error-is-returned-if-metadata-is-empty"><span>an error is returned if metadata is empty</span></a></h2><p><em>Given</em> validator</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
  &quot;address&quot;: &quot;chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>When</em> validate validator</p><p><em>Then</em> expect the error</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>metadata: empty string is not allowed: parse error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="an-error-is-returned-if-metadata-exceeds-128-characters" tabindex="-1"><a class="header-anchor" href="#an-error-is-returned-if-metadata-exceeds-128-characters"><span>an error is returned if metadata exceeds 128 characters</span></a></h2><p><em>Given</em> validator</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
  &quot;address&quot;: &quot;chora1q5m97jdcksj24g9enlkjqq75ygt5q6ak54jk38&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>And</em> metadata with length &quot;129&quot;</p><p><em>When</em> validate validator</p><p><em>Then</em> expect the error</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>metadata: exceeds max length 128: parse error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,31),s=[i];function n(l,o){return a(),t("div",null,s)}const m=e(d,[["render",n],["__file","types_state_validator.html.vue"]]),v=JSON.parse('{"path":"/specs/mods/validator/types_state_validator.html","title":"Validator","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"valid validator","slug":"valid-validator","link":"#valid-validator","children":[]},{"level":2,"title":"an error is returned if address is empty","slug":"an-error-is-returned-if-address-is-empty","link":"#an-error-is-returned-if-address-is-empty","children":[]},{"level":2,"title":"an error is returned if address is not a bech32 address","slug":"an-error-is-returned-if-address-is-not-a-bech32-address","link":"#an-error-is-returned-if-address-is-not-a-bech32-address","children":[]},{"level":2,"title":"an error is returned if metadata is empty","slug":"an-error-is-returned-if-metadata-is-empty","link":"#an-error-is-returned-if-metadata-is-empty","children":[]},{"level":2,"title":"an error is returned if metadata exceeds 128 characters","slug":"an-error-is-returned-if-metadata-exceeds-128-characters","link":"#an-error-is-returned-if-metadata-exceeds-128-characters","children":[]}],"git":{},"filePathRelative":"specs/mods/validator/types_state_validator.md"}');export{m as comp,v as data};
